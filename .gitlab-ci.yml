variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

  DOCKER_REGISTRY: 662032419283.dkr.ecr.eu-north-1.amazonaws.com/securevault
  DOMAIN: securevault.itb2203.tautar.ee

stages:
  - build
  - deploy

build:back-end:
  image:
    name: docker:24.0.7-alpine3.18
  services:
    - docker:24.0.7-alpine3.18
  only:
    - master
    - main
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - aws ecr get-login-password | docker login --username AWS --password-stdin ${DOCKER_REGISTRY}
  script:
    - docker build -t ${DOCKER_REGISTRY}/back:${CI_COMMIT_SHA} ./Backend/
    - docker push ${DOCKER_REGISTRY}/back:${CI_COMMIT_SHA}
  after_script:
    - docker logout ${DOCKER_REGISTRY}
  stage: build
  artifacts:
    paths:

build:front-end:
  image:
    name: docker:24.0.7-alpine3.18
  services:
    - docker:24.0.7-alpine3.18
  only:
    - master
    - main
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - aws ecr get-login-password | docker login --username AWS --password-stdin ${DOCKER_REGISTRY}
  script:
    - docker build -t ${DOCKER_REGISTRY}/front:${CI_COMMIT_SHA} ./Frontend/
    - docker push ${DOCKER_REGISTRY}/front:${CI_COMMIT_SHA}
  after_script:
    - docker logout ${DOCKER_REGISTRY}
  stage: build
  artifacts:
    paths:

deploy:
  image: docker:24.0.7-alpine3.18
  when: manual
  only:
    - master
    - main
  before_script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )"

    - eval $(ssh-agent -s)

    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - ssh-keyscan ${DOMAIN} >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - echo "$SSH_PRIVATE_KEY"
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | tr -d '\r')

    - ssh ubuntu@${DOMAIN} "(aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin ${DOCKER_REGISTRY}) && CI_COMMIT_SHA=${CI_COMMIT_SHA} docker compose -f ~/app/docker-compose.yml up -d"
  after_script:
    - exit
  stage: deploy
